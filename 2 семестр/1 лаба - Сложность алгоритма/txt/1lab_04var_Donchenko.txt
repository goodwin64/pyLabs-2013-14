# 4. Имеются два упорядоченных по убыванию списка.
# Требуется получить третий упорядоченный по убыванию список,
# путем слияния первых двух.

import random

def insertion_sort(A):
    for i in range (1, len(A)):
        buffer = A [i]
        j = i - 1
        while j >= 0 and A[j] < buffer:
            A [j + 1] = A [j]
            j -= 1
        A [j+1] = buffer
    return A

def merge (left, right): # слияние по убыванию
    n, m = 0, 0
    result=[]
    while n < len(left) and m < len(right):
        if left[n] > right[m]:
            result.append(left[n])
            n += 1
        else:
            result.append(right[m])
            m += 1
    while n < len(left):
        result.append(left[n])
        n+=1
    while m < len(right):
        result.append(right[m])
        m+=1
    return result



Array1 = [randint(1, 1000) for x in range(10)]
Array2 = [randint(1, 1000) for x in range(10)]


insertion_sort(Array1)
print(Array1) # вывод массива 1
print('+')


insertion_sort(Array2)
print(Array2) # вывод массива 2
print('=')    

print (merge(Array1, Array2))









    
